{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Documents\\\\College\\\\Software Development\\\\fakeStackOverflow\\\\fakeStackOverflow\\\\client\\\\src\\\\components\\\\askQuestion.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Ask extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.handleOnSubmit = async (title, text, summary, tags, answers, asked_by, ask_date_time, views, votes, comments) => {\n      let data = {\n        title: title,\n        text: text,\n        summary: summary,\n        tags: tags,\n        answers: answers,\n        asked_by: asked_by,\n        ask_date_time: ask_date_time,\n        views: views,\n        votes: votes,\n        comments: comments\n      };\n      let func = this.props.showError;\n      await axios.post(\"http://127.0.0.1:8000/ask\", data).catch(function (error) {\n        func();\n      });\n    };\n    this.postQuestion = async showFunc => {\n      //alert(\"hello\");\n      let error = 0;\n      const nonDuplicate = [];\n      if (document.getElementById(\"qtText\").value.length > 50) {\n        document.getElementById(\"qtError\").innerHTML = \"Too Many Characters\";\n        error = 1;\n      } else {\n        document.getElementById(\"qtError\").innerHTML = \"\";\n      }\n      if (document.getElementById(\"qtText\").value.length === 0) {\n        document.getElementById(\"qtError\").innerHTML = \"Question Title Can Not Be Empty\";\n        error = 1;\n      } else {\n        document.getElementById(\"qtError\").innerHTML = \"\";\n      }\n      let summary = document.getElementById(\"qsumText\").value;\n      if (summary.length === 0) {\n        document.getElementById(\"qsumError\").innerHTML = \"Question Summary Can Not Be Empty\";\n        error = 1;\n      } else if (summary.length > 140) {\n        document.getElementById(\"qsumError\").innerHTML = \"Too Many Characters\";\n        error = 1;\n      } else {\n        document.getElementById(\"qsumError\").innerHTML = \"\";\n      }\n      let text = document.getElementById(\"qtextText\").value;\n      if (text.length === 0) {\n        document.getElementById(\"qtTextError\").innerHTML = \"Question Text Can Not Be Empty\";\n        error = 1;\n      } else {\n        let res = this.props.findIndices(text);\n        // console.log(res);\n        if (res === -1) {\n          document.getElementById(\"qtTextError\").innerHTML = \"Invalid HyperLink Configuration, Use [hyperlinkName nonEmpty ](link nonEmpty starts with https:// or http://)\";\n          error = 1;\n        } else if (res.length !== 0) {\n          text = res;\n          document.getElementById(\"qtTextError\").innerHTML = \"\";\n        } else {\n          document.getElementById(\"qtTextError\").innerHTML = \"\";\n        }\n      }\n      if (document.getElementById(\"tagsText\").value.length !== 0) {\n        let lenError = 0;\n        const tags = document.getElementById(\"tagsText\").value.toLowerCase().split(\" \");\n        nonDuplicate[0] = tags[0];\n        for (let i = 0; i < tags.length; i++) {\n          let include = 0;\n          for (let j = 0; j < nonDuplicate.length; j++) {\n            if (nonDuplicate[j] === tags[i]) include = 1;\n          }\n          if (include === 0 && tags[i].length <= 20) nonDuplicate.push(tags[i]);else if (tags[i].length > 20) {\n            lenError = 1;\n          }\n        }\n        if (nonDuplicate.length > 5 && lenError === 1) {\n          document.getElementById(\"tagsTextError\").innerHTML = \"Only 5 Unique Tags Allowed and Tags Can Not Have More Than 20 Characters\";\n          error = 1;\n        } else if (nonDuplicate.length > 5) {\n          document.getElementById(\"tagsTextError\").innerHTML = \"Only 5 Unique Tags Allowed\";\n          error = 1;\n        } else if (lenError === 1) {\n          document.getElementById(\"tagsTextError\").innerHTML = \"Tags Can Not Have More Than 20 Characters\";\n          error = 1;\n        } else {\n          document.getElementById(\"tagsTextError\").innerHTML = \"\";\n        }\n      }\n      let username = Cookies.get(\"user\");\n      let tags = [];\n      let result = \"\";\n      if (nonDuplicate.length !== 0 && error !== 1) {\n        let func2 = this.props.showError;\n        await axios.post(\"http://127.0.0.1:8000/ask/tags\", {\n          nonDuplicate: nonDuplicate,\n          user: username\n        }).then(res => {\n          // console.log(\"AskQuestion are you working?\");\n          tags = res.data.array;\n          result = res.data.result;\n        }).catch(function (error) {\n          func2();\n        });\n      }\n      if (result === \"Error\") {\n        error = 1;\n        document.getElementById(\"tagsTextError\").innerHTML = \"Not Enough Reputation to Add New Tags\";\n      } else {\n        document.getElementById(\"tagsTextError\").innerHTML = \"\";\n      }\n\n      // let tagIds = this.props.getTagIds(nonDuplicate);\n\n      if (error !== 1) {\n        this.handleOnSubmit(document.getElementById(\"qtText\").value, text, summary, tags, [], username, new Date(), 0, 0, []);\n        showFunc();\n      }\n    };\n  }\n  componentDidMount() {}\n  resetFormQ() {\n    document.getElementById(\"qtText\").value = \"\";\n    document.getElementById(\"qtextText\").value = \"\";\n    document.getElementById(\"tagsText\").value = \"\";\n    document.getElementById(\"qsumText\").value = \"\";\n    document.getElementById(\"qtError\").innerHTML = \"\";\n    document.getElementById(\"qsumError\").value = \"\";\n    document.getElementById(\"qtTextError\").innerHTML = \"\";\n    document.getElementById(\"tagsTextError\").innerHTML = \"\";\n  }\n  render() {\n    //const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\n    const {\n      showHome\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ask-body\",\n        className: \"ask-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"askQ\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headAskQ\",\n            children: [\"Question Title\", /*#__PURE__*/_jsxDEV(\"sup\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"qtLimit\",\n            className: \"miniAskQ\",\n            children: \"Limit Title To 50 Characters Or Less\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"qtText\",\n            className: \"askQForm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"qtError\",\n            className: \"miniAskQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headAskQ\",\n            children: [\"Question Summary\", /*#__PURE__*/_jsxDEV(\"sup\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"qsumDet\",\n            className: \"miniAskQ\",\n            children: \"Limit Summary to 140 Characters or Less\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"qsumText\",\n            className: \"askQForm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"qsumError\",\n            className: \"miniAskQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headAskQ\",\n            children: [\"Question Text\", /*#__PURE__*/_jsxDEV(\"sup\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"qtextDet\",\n            className: \"miniAskQ\",\n            children: \"Add Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"qtextText\",\n            className: \"askQForm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"qtTextError\",\n            className: \"miniAskQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headAskQ\",\n            children: [\"Tags\", /*#__PURE__*/_jsxDEV(\"sup\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"tagsWhite\",\n            className: \"miniAskQ\",\n            children: \"Add Keywords Separated By Whitespace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"tagsText\",\n            className: \"askQForm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"tagsTextError\",\n            className: \"miniAskQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.postQuestion(showHome),\n              id: \"postQ\",\n              className: \"post\",\n              children: \"Post Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"star\",\n              children: [/*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), \" indicates mandatory fields\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","axios","Cookies","jsxDEV","_jsxDEV","Ask","Component","constructor","args","handleOnSubmit","title","text","summary","tags","answers","asked_by","ask_date_time","views","votes","comments","data","func","props","showError","post","catch","error","postQuestion","showFunc","nonDuplicate","document","getElementById","value","length","innerHTML","res","findIndices","lenError","toLowerCase","split","i","include","j","push","username","get","result","func2","user","then","array","Date","componentDidMount","resetFormQ","render","showHome","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick"],"sources":["C:/Users/sahil/Documents/College/Software Development/fakeStackOverflow/fakeStackOverflow/client/src/components/askQuestion.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default class Ask extends React.Component {\r\n  componentDidMount() {}\r\n  handleOnSubmit = async (\r\n    title,\r\n    text,\r\n    summary,\r\n    tags,\r\n    answers,\r\n    asked_by,\r\n    ask_date_time,\r\n    views,\r\n    votes,\r\n    comments\r\n  ) => {\r\n    let data = {\r\n      title: title,\r\n      text: text,\r\n      summary: summary,\r\n      tags: tags,\r\n      answers: answers,\r\n      asked_by: asked_by,\r\n      ask_date_time: ask_date_time,\r\n      views: views,\r\n      votes: votes,\r\n      comments: comments,\r\n    };\r\n    let func = this.props.showError;\r\n    await axios.post(\"http://127.0.0.1:8000/ask\", data).catch(function (error) {\r\n      func();\r\n    });\r\n  };\r\n\r\n  resetFormQ() {\r\n    document.getElementById(\"qtText\").value = \"\";\r\n    document.getElementById(\"qtextText\").value = \"\";\r\n    document.getElementById(\"tagsText\").value = \"\";\r\n    document.getElementById(\"qsumText\").value = \"\";\r\n    document.getElementById(\"qtError\").innerHTML = \"\";\r\n    document.getElementById(\"qsumError\").value = \"\";\r\n    document.getElementById(\"qtTextError\").innerHTML = \"\";\r\n    document.getElementById(\"tagsTextError\").innerHTML = \"\";\r\n  }\r\n\r\n  postQuestion = async (showFunc) => {\r\n    //alert(\"hello\");\r\n    let error = 0;\r\n    const nonDuplicate = [];\r\n    if (document.getElementById(\"qtText\").value.length > 50) {\r\n      document.getElementById(\"qtError\").innerHTML = \"Too Many Characters\";\r\n      error = 1;\r\n    } else {\r\n      document.getElementById(\"qtError\").innerHTML = \"\";\r\n    }\r\n    if (document.getElementById(\"qtText\").value.length === 0) {\r\n      document.getElementById(\"qtError\").innerHTML =\r\n        \"Question Title Can Not Be Empty\";\r\n      error = 1;\r\n    } else {\r\n      document.getElementById(\"qtError\").innerHTML = \"\";\r\n    }\r\n    let summary = document.getElementById(\"qsumText\").value;\r\n    if (summary.length === 0) {\r\n      document.getElementById(\"qsumError\").innerHTML =\r\n        \"Question Summary Can Not Be Empty\";\r\n      error = 1;\r\n    } else if (summary.length > 140) {\r\n      document.getElementById(\"qsumError\").innerHTML = \"Too Many Characters\";\r\n      error = 1;\r\n    } else {\r\n      document.getElementById(\"qsumError\").innerHTML = \"\";\r\n    }\r\n    let text = document.getElementById(\"qtextText\").value;\r\n    if (text.length === 0) {\r\n      document.getElementById(\"qtTextError\").innerHTML =\r\n        \"Question Text Can Not Be Empty\";\r\n      error = 1;\r\n    } else {\r\n      let res = this.props.findIndices(text);\r\n      // console.log(res);\r\n      if (res === -1) {\r\n        document.getElementById(\"qtTextError\").innerHTML =\r\n          \"Invalid HyperLink Configuration, Use [hyperlinkName nonEmpty ](link nonEmpty starts with https:// or http://)\";\r\n        error = 1;\r\n      } else if (res.length !== 0) {\r\n        text = res;\r\n        document.getElementById(\"qtTextError\").innerHTML = \"\";\r\n      } else {\r\n        document.getElementById(\"qtTextError\").innerHTML = \"\";\r\n      }\r\n    }\r\n\r\n    if (document.getElementById(\"tagsText\").value.length !== 0) {\r\n      let lenError = 0;\r\n      const tags = document\r\n        .getElementById(\"tagsText\")\r\n        .value.toLowerCase()\r\n        .split(\" \");\r\n      nonDuplicate[0] = tags[0];\r\n      for (let i = 0; i < tags.length; i++) {\r\n        let include = 0;\r\n        for (let j = 0; j < nonDuplicate.length; j++) {\r\n          if (nonDuplicate[j] === tags[i]) include = 1;\r\n        }\r\n        if (include === 0 && tags[i].length <= 20) nonDuplicate.push(tags[i]);\r\n        else if (tags[i].length > 20) {\r\n          lenError = 1;\r\n        }\r\n      }\r\n      if (nonDuplicate.length > 5 && lenError === 1) {\r\n        document.getElementById(\"tagsTextError\").innerHTML =\r\n          \"Only 5 Unique Tags Allowed and Tags Can Not Have More Than 20 Characters\";\r\n        error = 1;\r\n      } else if (nonDuplicate.length > 5) {\r\n        document.getElementById(\"tagsTextError\").innerHTML =\r\n          \"Only 5 Unique Tags Allowed\";\r\n        error = 1;\r\n      } else if (lenError === 1) {\r\n        document.getElementById(\"tagsTextError\").innerHTML =\r\n          \"Tags Can Not Have More Than 20 Characters\";\r\n        error = 1;\r\n      } else {\r\n        document.getElementById(\"tagsTextError\").innerHTML = \"\";\r\n      }\r\n    }\r\n    let username = Cookies.get(\"user\");\r\n\r\n    let tags = [];\r\n    let result = \"\";\r\n    if (nonDuplicate.length !== 0 && error !== 1) {\r\n      let func2 = this.props.showError;\r\n      await axios\r\n        .post(\"http://127.0.0.1:8000/ask/tags\", {\r\n          nonDuplicate: nonDuplicate,\r\n          user: username,\r\n        })\r\n        .then((res) => {\r\n          // console.log(\"AskQuestion are you working?\");\r\n          tags = res.data.array;\r\n          result = res.data.result;\r\n        })\r\n        .catch(function (error) {\r\n          func2();\r\n        });\r\n    }\r\n\r\n    if (result === \"Error\") {\r\n      error = 1;\r\n      document.getElementById(\"tagsTextError\").innerHTML =\r\n        \"Not Enough Reputation to Add New Tags\";\r\n    } else {\r\n      document.getElementById(\"tagsTextError\").innerHTML = \"\";\r\n    }\r\n\r\n    // let tagIds = this.props.getTagIds(nonDuplicate);\r\n\r\n    if (error !== 1) {\r\n      this.handleOnSubmit(\r\n        document.getElementById(\"qtText\").value,\r\n        text,\r\n        summary,\r\n        tags,\r\n        [],\r\n        username,\r\n        new Date(),\r\n        0,\r\n        0,\r\n        []\r\n      );\r\n\r\n      showFunc();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n    const { showHome } = this.props;\r\n    return (\r\n      <div>\r\n        <div id=\"ask-body\" className=\"ask-body\">\r\n          <form id=\"askQ\">\r\n            <div className=\"headAskQ\">\r\n              Question Title<sup>*</sup>\r\n            </div>\r\n            <br />\r\n            <div id=\"qtLimit\" className=\"miniAskQ\">\r\n              Limit Title To 50 Characters Or Less\r\n            </div>\r\n            <input type=\"text\" id=\"qtText\" className=\"askQForm\" />\r\n            <br />\r\n            <span id=\"qtError\" className=\"miniAskQ\"></span>\r\n\r\n            <div className=\"headAskQ\">\r\n              Question Summary<sup>*</sup>\r\n            </div>\r\n            <br />\r\n            <div id=\"qsumDet\" className=\"miniAskQ\">\r\n              Limit Summary to 140 Characters or Less\r\n            </div>\r\n            <textarea id=\"qsumText\" className=\"askQForm\"></textarea>\r\n            <br />\r\n            <span id=\"qsumError\" className=\"miniAskQ\"></span>\r\n\r\n            <div className=\"headAskQ\">\r\n              Question Text<sup>*</sup>\r\n            </div>\r\n            <br />\r\n            <div id=\"qtextDet\" className=\"miniAskQ\">\r\n              Add Details\r\n            </div>\r\n            <textarea id=\"qtextText\" className=\"askQForm\"></textarea>\r\n            <br />\r\n            <span id=\"qtTextError\" className=\"miniAskQ\"></span>\r\n\r\n            <div className=\"headAskQ\">\r\n              Tags<sup>*</sup>\r\n            </div>\r\n            <br />\r\n            <div id=\"tagsWhite\" className=\"miniAskQ\">\r\n              Add Keywords Separated By Whitespace\r\n            </div>\r\n            <input type=\"text\" id=\"tagsText\" className=\"askQForm\" />\r\n            <br />\r\n            <span id=\"tagsTextError\" className=\"miniAskQ\"></span>\r\n\r\n            <div>\r\n              <button\r\n                onClick={() => this.postQuestion(showHome)}\r\n                id=\"postQ\"\r\n                className=\"post\"\r\n              >\r\n                Post Question\r\n              </button>\r\n              <span id=\"star\">\r\n                <sup>*</sup> indicates mandatory fields\r\n              </span>\r\n            </div>\r\n            {/*<div id=\"test\"></div>*/}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Documents\\\\College\\\\Software Development\\\\fakeStackOverflow\\\\fakeStackOverflow\\\\client\\\\src\\\\components\\\\postAnswer.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleOnSubmit = text => {\n      let username = Cookies.get(\"user\");\n      let data = {\n        text: text,\n        ans_by: username,\n        qid: this.state.qid\n      };\n      let func = this.props.showError;\n      axios.post(\"http://127.0.0.1:8000/post\", data).then(res => {\n        if (res.data === \"NOT OKAY\") {\n          document.getElementById(\"qtTextAnsError\").innerHTML = \"*Your reputation is not good. Must be reputation > 50 to post answer.\";\n        } else {\n          document.getElementById(\"qtextTextAns\").value = \"\";\n        }\n        this.props.rerender();\n      }).catch(function (error) {\n        func();\n      });\n    };\n    this.state = {\n      qid: this.props.qid\n    };\n    this.postAnswer = this.postAnswer.bind(this);\n  }\n  postAnswer() {\n    let error = 0;\n    let text = document.getElementById(\"qtextTextAns\").value;\n    if (text.length === 0) {\n      document.getElementById(\"qtTextAnsError\").innerHTML = \"Answer Text Can Not Be Empty\";\n      error = 1;\n    } else {\n      let res = this.props.findIndices(text);\n      if (res === -1) {\n        document.getElementById(\"qtTextAnsError\").innerHTML = \"Invalid HyperLink Configuration, Use [hyperlinkName nonEmpty ](link nonEmpty starts with https:// or http://)\";\n        error = 1;\n      } else if (res.length !== 0) {\n        text = res;\n        document.getElementById(\"qtTextAnsError\").innerHTML = \"\";\n      } else {\n        document.getElementById(\"qtTextAnsError\").innerHTML = \"\";\n      }\n    }\n    if (error !== 1) {\n      this.handleOnSubmit(text);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"answer-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"ansQ\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headAskQ\",\n          children: [\"Post Answer:\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"qtextTextAns\",\n          className: \"askQForm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"qtTextAnsError\",\n          className: \"miniAskQ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.postAnswer,\n            id: \"postAns\",\n            className: \"post\",\n            children: \"Post Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"star\",\n            children: [/*#__PURE__*/_jsxDEV(\"sup\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), \" indicates mandatory fields\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","axios","Cookies","jsxDEV","_jsxDEV","Post","Component","constructor","props","handleOnSubmit","text","username","get","data","ans_by","qid","state","func","showError","post","then","res","document","getElementById","innerHTML","value","rerender","catch","error","postAnswer","bind","length","findIndices","render","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/sahil/Documents/College/Software Development/fakeStackOverflow/fakeStackOverflow/client/src/components/postAnswer.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default class Post extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      qid: this.props.qid,\r\n    };\r\n\r\n    this.postAnswer = this.postAnswer.bind(this);\r\n  }\r\n\r\n  handleOnSubmit = (text) => {\r\n    let username = Cookies.get(\"user\");\r\n    let data = {\r\n      text: text,\r\n      ans_by: username,\r\n      qid: this.state.qid,\r\n    };\r\n    let func = this.props.showError;\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/post\", data)\r\n      .then((res) => {\r\n        if(res.data === \"NOT OKAY\") {\r\n          document.getElementById(\"qtTextAnsError\").innerHTML = \"*Your reputation is not good. Must be reputation > 50 to post answer.\";\r\n        } else {\r\n          document.getElementById(\"qtextTextAns\").value = \"\";\r\n        }\r\n        \r\n        this.props.rerender();\r\n      })\r\n      .catch(function (error) {\r\n        func();\r\n      });\r\n  };\r\n\r\n  postAnswer() {\r\n    let error = 0;\r\n\r\n    let text = document.getElementById(\"qtextTextAns\").value;\r\n    if (text.length === 0) {\r\n      document.getElementById(\"qtTextAnsError\").innerHTML =\r\n        \"Answer Text Can Not Be Empty\";\r\n      error = 1;\r\n    } else {\r\n      let res = this.props.findIndices(text);\r\n      if (res === -1) {\r\n        document.getElementById(\"qtTextAnsError\").innerHTML =\r\n          \"Invalid HyperLink Configuration, Use [hyperlinkName nonEmpty ](link nonEmpty starts with https:// or http://)\";\r\n        error = 1;\r\n      } else if (res.length !== 0) {\r\n        text = res;\r\n        document.getElementById(\"qtTextAnsError\").innerHTML = \"\";\r\n      } else {\r\n        document.getElementById(\"qtTextAnsError\").innerHTML = \"\";\r\n      }\r\n    }\r\n\r\n    if (error !== 1) {\r\n      this.handleOnSubmit(text);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"answer-body\">\r\n        <form id=\"ansQ\">\r\n          <div className=\"headAskQ\">\r\n            Post Answer:<sup>*</sup>\r\n          </div>\r\n          <br />\r\n          <textarea id=\"qtextTextAns\" className=\"askQForm\"></textarea>\r\n          <br />\r\n          <span id=\"qtTextAnsError\" className=\"miniAskQ\"></span>\r\n\r\n          <div>\r\n            <button onClick={this.postAnswer} id=\"postAns\" className=\"post\">\r\n              Post Answer\r\n            </button>\r\n\r\n            <span id=\"star\">\r\n              <sup>*</sup> indicates mandatory fields\r\n            </span>\r\n          </div>\r\n        </form>\r\n\r\n        <br />\r\n        <br />\r\n        <hr />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
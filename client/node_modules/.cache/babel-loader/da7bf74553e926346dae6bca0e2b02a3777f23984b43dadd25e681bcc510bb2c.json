{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Documents\\\\College\\\\Software Development\\\\fakeStackOverflow\\\\fakeStackOverflow\\\\client\\\\src\\\\components\\\\homepage.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      // batches: [],\n      // batchIdx: 0,\n      needRequest: true\n      // activity: 0,\n    };\n    this.batches = [];\n    this.batchIdx = 0;\n    this.activity = 0;\n    this.newestQuestions = this.newestQuestions.bind(this);\n    this.activeQuestions = this.activeQuestions.bind(this);\n    this.unansweredQuestions = this.unansweredQuestions.bind(this);\n    this.previous = this.previous.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  //We can axios for the data here once SESSIONS WORK\n  componentDidMount() {\n    if (this.state.needRequest) {\n      // this.state.activity = 0;\n      this.activity = 0;\n      this.newestQuestions();\n    }\n  }\n  previous() {\n    // this.state.needRequest = false;\n    // this.state.activity = 1;\n    this.activity = 1;\n    this.getCorrectBatch();\n    this.setState({\n      needRequest: false\n    });\n  }\n  next() {\n    // this.state.needRequest = false;\n    // this.state.activity = 2;\n    this.activity = 2;\n    this.getCorrectBatch();\n    this.setState({\n      needRequest: false\n    });\n  }\n  newestQuestions() {\n    // this.state.needRequest = true;\n    let func = this.props.showError;\n    axios.get(\"http://127.0.0.1:8000/home/newest/\").then(res => {\n      let qs = this.props.formulateQuestions(res.data);\n      this.setState({\n        questions: qs,\n        needRequest: true\n      }); //set questions\n    }).catch(function (error) {\n      func();\n    });\n  }\n  activeQuestions() {\n    // this.state.needRequest = true;\n    let func = this.props.showError;\n    axios.get(\"http://127.0.0.1:8000/home/active/\").then(res => {\n      let qs = this.props.formulateQuestions(res.data);\n      this.setState({\n        questions: qs,\n        needRequest: true\n      }); //set questions\n    }).catch(function (error) {\n      func();\n    });\n  }\n  unansweredQuestions() {\n    // this.state.needRequest = true;\n    let func = this.props.showError;\n    axios.get(\"http://127.0.0.1:8000/home/unanswered/\").then(res => {\n      let qs = this.props.formulateQuestions(res.data);\n      this.setState({\n        questions: qs,\n        needRequest: true\n      }); //set questions\n    }).catch(function (error) {\n      func();\n    });\n  }\n  formBatches() {\n    let questions = this.state.questions;\n    let numBatches = Math.ceil(questions.length / 5);\n    let batches = [];\n    if (numBatches > 0) {\n      let idx = 0;\n      for (let i = 0; i < numBatches; i++) {\n        let batch = [];\n        for (let j = 0; j < 5 && idx < questions.length; j++) {\n          batch.push(questions[idx++]);\n        }\n        batches.push(batch);\n      }\n    }\n\n    // this.state.batches = batches;\n    this.batches = batches;\n    // console.log(batches);\n  }\n  getCorrectBatch() {\n    //activities: 0 means current batch, 1 means previous if any, 2 means next if any\n    // let activity = this.state.activity;\n    let activity = this.activity;\n    // this.state.activity = 0;\n    this.activity = 0;\n    if (this.state.questions.length === 0) return this.state.questions;\n    // let currBatchIdx = this.state.batchIdx;\n    let currBatchIdx = this.batchIdx;\n    // let maxBatchIdx = this.state.batches.length - 1;\n    let maxBatchIdx = this.batches.length - 1;\n    if (activity === 0 || activity === 1 && currBatchIdx === 0) {\n      // return this.state.batches[currBatchIdx];\n      return this.batches[currBatchIdx];\n    } else if (activity === 1) {\n      // this.state.batchIdx = --currBatchIdx;\n      this.batchIdx = --currBatchIdx;\n    } else if (activity === 2 && currBatchIdx === maxBatchIdx) {\n      currBatchIdx = 0;\n      // this.state.batchIdx = currBatchIdx;\n      this.batchIdx = currBatchIdx;\n    } else if (activity === 2) {\n      // this.state.batchIdx = ++currBatchIdx;\n      this.batchIdx = ++currBatchIdx;\n    }\n\n    // return this.state.batches[currBatchIdx];\n    return this.batches[currBatchIdx];\n  }\n  render() {\n    const {\n      showAsk\n    } = this.props;\n\n    // let questions = this.getCorrectBatch();\n    this.formBatches();\n    let questions = this.getCorrectBatch();\n    let numQuestions = this.state.questions.length;\n    let qStr = \"question\";\n    // let result = \"\";\n    // if (numQuestions === 0) result = <h3>No Questions Found</h3>;\n    if (numQuestions !== 1) qStr += \"s\";\n    let isLoggedIn;\n    if (Cookies.get(\"user\")) {\n      isLoggedIn = true;\n    }\n    // let batchIndex = this.state.batchIdx;\n    let batchIndex = this.batchIdx;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"home-body\",\n        children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => showAsk(),\n          id: \"askQuestion\",\n          className: \"button\",\n          children: \"Ask Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"allquestions\",\n          children: \"All Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"numQ\",\n              children: numQuestions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), \" \", qStr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new\",\n            onClick: this.newestQuestions,\n            children: \"Newest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"act\",\n            onClick: this.activeQuestions,\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"unans\",\n            onClick: this.unansweredQuestions,\n            children: \"Unanswered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), this.state.questions.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"batchSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"questionNav\",\n            onClick: this.previous,\n            children: \"prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"batchIdx\",\n            children: [\"Page \", batchIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"questionNav\",\n            onClick: this.next,\n            children: \"next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"homeQuestionsList\",\n          children: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","axios","Cookies","jsxDEV","_jsxDEV","Home","Component","constructor","props","state","questions","needRequest","batches","batchIdx","activity","newestQuestions","bind","activeQuestions","unansweredQuestions","previous","next","componentDidMount","getCorrectBatch","setState","func","showError","get","then","res","qs","formulateQuestions","data","catch","error","formBatches","numBatches","Math","ceil","length","idx","i","batch","j","push","currBatchIdx","maxBatchIdx","render","showAsk","numQuestions","qStr","isLoggedIn","batchIndex","children","id","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/sahil/Documents/College/Software Development/fakeStackOverflow/fakeStackOverflow/client/src/components/homepage.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      // batches: [],\r\n      // batchIdx: 0,\r\n      needRequest: true,\r\n      // activity: 0,\r\n    };\r\n\r\n    this.batches = [];\r\n    this.batchIdx = 0;\r\n    this.activity = 0;\r\n\r\n    this.newestQuestions = this.newestQuestions.bind(this);\r\n    this.activeQuestions = this.activeQuestions.bind(this);\r\n    this.unansweredQuestions = this.unansweredQuestions.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.next = this.next.bind(this);\r\n  }\r\n\r\n  //We can axios for the data here once SESSIONS WORK\r\n  componentDidMount() {\r\n    if (this.state.needRequest) {\r\n      // this.state.activity = 0;\r\n      this.activity = 0;\r\n      this.newestQuestions();\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    // this.state.needRequest = false;\r\n    // this.state.activity = 1;\r\n    this.activity = 1;\r\n    this.getCorrectBatch();\r\n    this.setState({ needRequest: false });\r\n  }\r\n\r\n  next() {\r\n    // this.state.needRequest = false;\r\n    // this.state.activity = 2;\r\n    this.activity = 2;\r\n    this.getCorrectBatch();\r\n    this.setState({ needRequest: false });\r\n  }\r\n\r\n  newestQuestions() {\r\n    // this.state.needRequest = true;\r\n    let func = this.props.showError;\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/home/newest/\")\r\n      .then((res) => {\r\n        let qs = this.props.formulateQuestions(res.data);\r\n        this.setState({ questions: qs, needRequest: true }); //set questions\r\n      })\r\n      .catch(function (error) {\r\n        func();\r\n      });\r\n  }\r\n\r\n  activeQuestions() {\r\n    // this.state.needRequest = true;\r\n    let func = this.props.showError;\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/home/active/\")\r\n      .then((res) => {\r\n        let qs = this.props.formulateQuestions(res.data);\r\n        this.setState({ questions: qs, needRequest: true }); //set questions\r\n      })\r\n      .catch(function (error) {\r\n        func();\r\n      });\r\n  }\r\n\r\n  unansweredQuestions() {\r\n    // this.state.needRequest = true;\r\n    let func = this.props.showError;\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/home/unanswered/\")\r\n      .then((res) => {\r\n        let qs = this.props.formulateQuestions(res.data);\r\n        this.setState({ questions: qs, needRequest: true }); //set questions\r\n      })\r\n      .catch(function (error) {\r\n        func();\r\n      });\r\n  }\r\n\r\n  formBatches() {\r\n    let questions = this.state.questions;\r\n    let numBatches = Math.ceil(questions.length / 5);\r\n    let batches = [];\r\n    if (numBatches > 0) {\r\n      let idx = 0;\r\n      for (let i = 0; i < numBatches; i++) {\r\n        let batch = [];\r\n\r\n        for (let j = 0; j < 5 && idx < questions.length; j++) {\r\n          batch.push(questions[idx++]);\r\n        }\r\n\r\n        batches.push(batch);\r\n      }\r\n    }\r\n\r\n    // this.state.batches = batches;\r\n    this.batches = batches;\r\n    // console.log(batches);\r\n  }\r\n\r\n  getCorrectBatch() {\r\n    //activities: 0 means current batch, 1 means previous if any, 2 means next if any\r\n    // let activity = this.state.activity;\r\n    let activity = this.activity;\r\n    // this.state.activity = 0;\r\n    this.activity = 0;\r\n    if (this.state.questions.length === 0) return this.state.questions;\r\n    // let currBatchIdx = this.state.batchIdx;\r\n    let currBatchIdx = this.batchIdx;\r\n    // let maxBatchIdx = this.state.batches.length - 1;\r\n    let maxBatchIdx = this.batches.length - 1;\r\n    if (activity === 0 || (activity === 1 && currBatchIdx === 0)) {\r\n      // return this.state.batches[currBatchIdx];\r\n      return this.batches[currBatchIdx];\r\n    } else if (activity === 1) {\r\n      // this.state.batchIdx = --currBatchIdx;\r\n      this.batchIdx = --currBatchIdx;\r\n    } else if (activity === 2 && currBatchIdx === maxBatchIdx) {\r\n      currBatchIdx = 0;\r\n      // this.state.batchIdx = currBatchIdx;\r\n      this.batchIdx = currBatchIdx;\r\n    } else if (activity === 2) {\r\n      // this.state.batchIdx = ++currBatchIdx;\r\n      this.batchIdx = ++currBatchIdx;\r\n    }\r\n\r\n    // return this.state.batches[currBatchIdx];\r\n    return this.batches[currBatchIdx];\r\n  }\r\n\r\n  render() {\r\n    const { showAsk } = this.props;\r\n\r\n    // let questions = this.getCorrectBatch();\r\n    this.formBatches();\r\n    let questions = this.getCorrectBatch();\r\n    let numQuestions = this.state.questions.length;\r\n\r\n    let qStr = \"question\";\r\n    // let result = \"\";\r\n    // if (numQuestions === 0) result = <h3>No Questions Found</h3>;\r\n    if (numQuestions !== 1) qStr += \"s\";\r\n\r\n    let isLoggedIn;\r\n    if (Cookies.get(\"user\")) {\r\n      isLoggedIn = true;\r\n    }\r\n    // let batchIndex = this.state.batchIdx;\r\n    let batchIndex = this.batchIdx;\r\n    return (\r\n      <section>\r\n        <div id=\"home-body\">\r\n          {isLoggedIn && (\r\n            <button\r\n              onClick={() => showAsk()}\r\n              id=\"askQuestion\"\r\n              className=\"button\"\r\n            >\r\n              Ask Question\r\n            </button>\r\n          )}\r\n          <h1 id=\"allquestions\">All Questions</h1>\r\n          <div id=\"bts\">\r\n            <h3>\r\n              <span id=\"numQ\">{numQuestions}</span> {qStr}\r\n            </h3>\r\n            <button id=\"new\" onClick={this.newestQuestions}>\r\n              Newest\r\n            </button>\r\n            <button id=\"act\" onClick={this.activeQuestions}>\r\n              Active\r\n            </button>\r\n            <button id=\"unans\" onClick={this.unansweredQuestions}>\r\n              Unanswered\r\n            </button>\r\n          </div>\r\n          <br />\r\n          {this.state.questions.length > 5 && (\r\n            <div className=\"batchSection\">\r\n              <button className=\"questionNav\" onClick={this.previous}>\r\n                prev\r\n              </button>\r\n              <span id=\"batchIdx\">Page {batchIndex + 1}</span>\r\n              <button className=\"questionNav\" onClick={this.next}>\r\n                next\r\n              </button>\r\n            </div>\r\n          )}\r\n          <br />\r\n          <hr />\r\n          <div id=\"homeQuestionsList\">{questions}</div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,MAAMC,IAAI,SAASL,KAAK,CAACM,SAAS,CAAC;EAChDC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE,EAAE;MACb;MACA;MACAC,WAAW,EAAE;MACb;IACF,CAAC;IAED,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,QAAQ,GAAG,CAAC;IAEjB,IAAI,CAACC,eAAe,GAAG,IAAI,CAACA,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAACC,eAAe,GAAG,IAAI,CAACA,eAAe,CAACD,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAACE,mBAAmB,GAAG,IAAI,CAACA,mBAAmB,CAACF,IAAI,CAAC,IAAI,CAAC;IAC9D,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACH,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACI,IAAI,GAAG,IAAI,CAACA,IAAI,CAACJ,IAAI,CAAC,IAAI,CAAC;EAClC;;EAEA;EACAK,iBAAiBA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACZ,KAAK,CAACE,WAAW,EAAE;MAC1B;MACA,IAAI,CAACG,QAAQ,GAAG,CAAC;MACjB,IAAI,CAACC,eAAe,CAAC,CAAC;IACxB;EACF;EAEAI,QAAQA,CAAA,EAAG;IACT;IACA;IACA,IAAI,CAACL,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACQ,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,QAAQ,CAAC;MAAEZ,WAAW,EAAE;IAAM,CAAC,CAAC;EACvC;EAEAS,IAAIA,CAAA,EAAG;IACL;IACA;IACA,IAAI,CAACN,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACQ,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,QAAQ,CAAC;MAAEZ,WAAW,EAAE;IAAM,CAAC,CAAC;EACvC;EAEAI,eAAeA,CAAA,EAAG;IAChB;IACA,IAAIS,IAAI,GAAG,IAAI,CAAChB,KAAK,CAACiB,SAAS;IAC/BxB,KAAK,CACFyB,GAAG,CAAC,oCAAoC,CAAC,CACzCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIC,EAAE,GAAG,IAAI,CAACrB,KAAK,CAACsB,kBAAkB,CAACF,GAAG,CAACG,IAAI,CAAC;MAChD,IAAI,CAACR,QAAQ,CAAC;QAAEb,SAAS,EAAEmB,EAAE;QAAElB,WAAW,EAAE;MAAK,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CACDqB,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBT,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;EACN;EAEAP,eAAeA,CAAA,EAAG;IAChB;IACA,IAAIO,IAAI,GAAG,IAAI,CAAChB,KAAK,CAACiB,SAAS;IAC/BxB,KAAK,CACFyB,GAAG,CAAC,oCAAoC,CAAC,CACzCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIC,EAAE,GAAG,IAAI,CAACrB,KAAK,CAACsB,kBAAkB,CAACF,GAAG,CAACG,IAAI,CAAC;MAChD,IAAI,CAACR,QAAQ,CAAC;QAAEb,SAAS,EAAEmB,EAAE;QAAElB,WAAW,EAAE;MAAK,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CACDqB,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBT,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;EACN;EAEAN,mBAAmBA,CAAA,EAAG;IACpB;IACA,IAAIM,IAAI,GAAG,IAAI,CAAChB,KAAK,CAACiB,SAAS;IAC/BxB,KAAK,CACFyB,GAAG,CAAC,wCAAwC,CAAC,CAC7CC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIC,EAAE,GAAG,IAAI,CAACrB,KAAK,CAACsB,kBAAkB,CAACF,GAAG,CAACG,IAAI,CAAC;MAChD,IAAI,CAACR,QAAQ,CAAC;QAAEb,SAAS,EAAEmB,EAAE;QAAElB,WAAW,EAAE;MAAK,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CACDqB,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBT,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;EACN;EAEAU,WAAWA,CAAA,EAAG;IACZ,IAAIxB,SAAS,GAAG,IAAI,CAACD,KAAK,CAACC,SAAS;IACpC,IAAIyB,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC3B,SAAS,CAAC4B,MAAM,GAAG,CAAC,CAAC;IAChD,IAAI1B,OAAO,GAAG,EAAE;IAChB,IAAIuB,UAAU,GAAG,CAAC,EAAE;MAClB,IAAII,GAAG,GAAG,CAAC;MACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,EAAE,EAAE;QACnC,IAAIC,KAAK,GAAG,EAAE;QAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,IAAIH,GAAG,GAAG7B,SAAS,CAAC4B,MAAM,EAAEI,CAAC,EAAE,EAAE;UACpDD,KAAK,CAACE,IAAI,CAACjC,SAAS,CAAC6B,GAAG,EAAE,CAAC,CAAC;QAC9B;QAEA3B,OAAO,CAAC+B,IAAI,CAACF,KAAK,CAAC;MACrB;IACF;;IAEA;IACA,IAAI,CAAC7B,OAAO,GAAGA,OAAO;IACtB;EACF;EAEAU,eAAeA,CAAA,EAAG;IAChB;IACA;IACA,IAAIR,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC5B;IACA,IAAI,CAACA,QAAQ,GAAG,CAAC;IACjB,IAAI,IAAI,CAACL,KAAK,CAACC,SAAS,CAAC4B,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC7B,KAAK,CAACC,SAAS;IAClE;IACA,IAAIkC,YAAY,GAAG,IAAI,CAAC/B,QAAQ;IAChC;IACA,IAAIgC,WAAW,GAAG,IAAI,CAACjC,OAAO,CAAC0B,MAAM,GAAG,CAAC;IACzC,IAAIxB,QAAQ,KAAK,CAAC,IAAKA,QAAQ,KAAK,CAAC,IAAI8B,YAAY,KAAK,CAAE,EAAE;MAC5D;MACA,OAAO,IAAI,CAAChC,OAAO,CAACgC,YAAY,CAAC;IACnC,CAAC,MAAM,IAAI9B,QAAQ,KAAK,CAAC,EAAE;MACzB;MACA,IAAI,CAACD,QAAQ,GAAG,EAAE+B,YAAY;IAChC,CAAC,MAAM,IAAI9B,QAAQ,KAAK,CAAC,IAAI8B,YAAY,KAAKC,WAAW,EAAE;MACzDD,YAAY,GAAG,CAAC;MAChB;MACA,IAAI,CAAC/B,QAAQ,GAAG+B,YAAY;IAC9B,CAAC,MAAM,IAAI9B,QAAQ,KAAK,CAAC,EAAE;MACzB;MACA,IAAI,CAACD,QAAQ,GAAG,EAAE+B,YAAY;IAChC;;IAEA;IACA,OAAO,IAAI,CAAChC,OAAO,CAACgC,YAAY,CAAC;EACnC;EAEAE,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACvC,KAAK;;IAE9B;IACA,IAAI,CAAC0B,WAAW,CAAC,CAAC;IAClB,IAAIxB,SAAS,GAAG,IAAI,CAACY,eAAe,CAAC,CAAC;IACtC,IAAI0B,YAAY,GAAG,IAAI,CAACvC,KAAK,CAACC,SAAS,CAAC4B,MAAM;IAE9C,IAAIW,IAAI,GAAG,UAAU;IACrB;IACA;IACA,IAAID,YAAY,KAAK,CAAC,EAAEC,IAAI,IAAI,GAAG;IAEnC,IAAIC,UAAU;IACd,IAAIhD,OAAO,CAACwB,GAAG,CAAC,MAAM,CAAC,EAAE;MACvBwB,UAAU,GAAG,IAAI;IACnB;IACA;IACA,IAAIC,UAAU,GAAG,IAAI,CAACtC,QAAQ;IAC9B,oBACET,OAAA;MAAAgD,QAAA,eACEhD,OAAA;QAAKiD,EAAE,EAAC,WAAW;QAAAD,QAAA,GAChBF,UAAU,iBACT9C,OAAA;UACEkD,OAAO,EAAEA,CAAA,KAAMP,OAAO,CAAC,CAAE;UACzBM,EAAE,EAAC,aAAa;UAChBE,SAAS,EAAC,QAAQ;UAAAH,QAAA,EACnB;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,eACDvD,OAAA;UAAIiD,EAAE,EAAC,cAAc;UAAAD,QAAA,EAAC;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCvD,OAAA;UAAKiD,EAAE,EAAC,KAAK;UAAAD,QAAA,gBACXhD,OAAA;YAAAgD,QAAA,gBACEhD,OAAA;cAAMiD,EAAE,EAAC,MAAM;cAAAD,QAAA,EAAEJ;YAAY;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,KAAC,EAACV,IAAI;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACLvD,OAAA;YAAQiD,EAAE,EAAC,KAAK;YAACC,OAAO,EAAE,IAAI,CAACvC,eAAgB;YAAAqC,QAAA,EAAC;UAEhD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTvD,OAAA;YAAQiD,EAAE,EAAC,KAAK;YAACC,OAAO,EAAE,IAAI,CAACrC,eAAgB;YAAAmC,QAAA,EAAC;UAEhD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTvD,OAAA;YAAQiD,EAAE,EAAC,OAAO;YAACC,OAAO,EAAE,IAAI,CAACpC,mBAAoB;YAAAkC,QAAA,EAAC;UAEtD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNvD,OAAA;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACL,IAAI,CAAClD,KAAK,CAACC,SAAS,CAAC4B,MAAM,GAAG,CAAC,iBAC9BlC,OAAA;UAAKmD,SAAS,EAAC,cAAc;UAAAH,QAAA,gBAC3BhD,OAAA;YAAQmD,SAAS,EAAC,aAAa;YAACD,OAAO,EAAE,IAAI,CAACnC,QAAS;YAAAiC,QAAA,EAAC;UAExD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTvD,OAAA;YAAMiD,EAAE,EAAC,UAAU;YAAAD,QAAA,GAAC,OAAK,EAACD,UAAU,GAAG,CAAC;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChDvD,OAAA;YAAQmD,SAAS,EAAC,aAAa;YAACD,OAAO,EAAE,IAAI,CAAClC,IAAK;YAAAgC,QAAA,EAAC;UAEpD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,eACDvD,OAAA;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNvD,OAAA;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNvD,OAAA;UAAKiD,EAAE,EAAC,mBAAmB;UAAAD,QAAA,EAAE1C;QAAS;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}